class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class StaticMGWeapon : default
	{
		SkeletonBones[]=
		{
			"otocvez",	"",
			"otochlaven",	"otocvez",
			"otochlaven_shake",	"otochlaven",
			"ammo_belt",	"otochlaven_shake",
			"bullet012",	"ammo_belt",
			"bullet011",	"bullet012",
			"bullet010",	"bullet011",
			"bullet009",	"bullet010",
			"bullet008",	"bullet009",
			"bullet007",	"bullet008",
			"bullet006",	"bullet007",
			"bullet005",	"bullet006",
			"bullet004",	"bullet005",
			"bullet003",	"bullet004",
			"bullet002",	"bullet003",
			"bullet001",	"bullet002",
			"magazine",	"otochlaven_shake",
			"feedtray_cover",	"otochlaven_shake",
			"bolt",	"otochlaven_shake",
			"recoil",	"otochlaven_shake",
			"damagehiderecoil",	"recoil",
			"charging_handle",	"otochlaven_shake",
			"damagehidehlaven",	"otochlaven",
			"damagehidevez",	"otocvez"
		};
	};
	class KORD: StaticMGWeapon
	{
         	isDiscrete = 1;
		skeletonInherit = "StaticMGWeapon";
		skeletonBones[]=
		{
			"ammo_belt_cover","feedtray_cover",
			"bullet_cover","feedtray_cover",
			"stopor","OtocVez"
		};
	};
};

class CfgModels
{
	class Default
	{
		sections[] = {};
		sectionsInherit="";
		skeletonName = "";
	};
	class KORD: Default
	{
		sections[]=
		{
			"zasleh"
		};
		skeletonName="KORD";		
		class Animations
		{
			class ammo_belt_rotation
			{
				type="rotationZ";
				selection="ammo_belt";
				source="ReloadAnim";
				axis="bolt_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0.000000;
				maxValue=0.010000;
				angle0=0.000000;
				angle1=-0.209440;
			};
			class MainTurret
			{
				type="rotationY";
				source="mainTurret";
				selection="OtocVez";
				axis="osaveze";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class MainGun
			{
				type="rotationX";
				source="mainGun";
				selection="OtocHlaven";
				axis="osahlavne";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class ammo_belt_cover_rotation: ammo_belt_rotation
			{
				selection="ammo_belt_cover";
				axis="ammo_belt_cover_axis";
				angle0=0.000000;
				angle1=0.3;
			};
			class bullet_cover_rotation: ammo_belt_rotation
			{
				selection="bullet_cover";
				axis="bullet_cover_axis";
				minValue=0.001000;
				maxValue=0.011000;
				angle0=-0.9;
				angle1=0.0;
			};
			class Turret_shake:ammo_belt_rotation
			{
				type="translation";
				sourceAddress="mirror";				
				selection="OtocHlaven_Shake";
				axis="osaveze";
				offset0=0;
				offset1=-0.002;
				minValue=0.0;
				maxValue=0.05;
			};
			class Turret_shake_aside:Turret_shake
			{
				axis="osahlavne";
				maxValue=0.05*1.3;
			};
			class Feedtray_cover_up
			{
				type="rotation";
				source="reloadMagazine";
				selection="feedtray_cover";
				axis="feedtray_cover_axis";
				memory=1;
				minValue=0.1000000;
				maxValue=0.130000;
				angle0=0.000000;
				angle1=-1.570796;
			};
			class Feedtray_cover_down:feedtray_cover_up
			{
				minValue=0.860000;
				maxValue=0.900000;
				angle0=0.000000;
				angle1=1.570796;
			};
			class Magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				sourceAddress="mirror";
				selection="magazine";
				minValue=0.0;
				maxValue=0.5;
				hideValue=0.56;
			};
			class ammo_belt_hide: Magazine_hide
			{
				selection="ammo_belt";
			};
 			class OP_ROT
 			{
 				type="rotation";
 				source="zeroing1"; 
 				sourceAddress="loop";     // loop when phase out of bounds
 				selection="OP";       // selection we want to rotate
 				axis="OP_axis";                  // has its own axis
 				minValue=0;
 				maxValue=9;   // this weapon has array with 4 distances
 				angle0="rad 0";
 				angle1="rad 65";
 			};	         			
		};
	};
	class KORD_6u16sp: KORD {};
};